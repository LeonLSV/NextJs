{"version":3,"file":"5.168227af7e70e43dbcf8.hot-update.js","sources":["webpack:///components/PodcastPlayer.js","webpack:///pages/channel.js"],"sourcesContent":["import { Link } from \"../routes\";\r\nimport slug from \"../helpers/slug\";\r\n\r\nexport default class PodcastPlayer extends React.Component {\r\n  render() {\r\n    const { clip, onClose } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"clip\">\r\n          <nav>\r\n            {onClose ? (\r\n              <a onClick={onClose}>&lt; Volver</a>\r\n            ) : (\r\n              <Link\r\n                route=\"channel\"\r\n                params={{ slug: slug(clip.channel.title), id: clip.channel.id }}\r\n                prefetch>\r\n                <a className=\"close\">&lt; Volver</a>\r\n              </Link>\r\n            )}\r\n          </nav>\r\n\r\n          <picture>\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  clip.urls.image || clip.channel.urls.logo_image.original\r\n                })`,\r\n              }}\r\n            />\r\n          </picture>\r\n\r\n          <div className=\"player\">\r\n            <h3>{clip.title}</h3>\r\n            <h6>{clip.channel.title}</h6>\r\n            <audio controls autoPlay={true}>\r\n              <source src={clip.urls.high_mp3} type=\"audio/mpeg\" />\r\n            </audio>\r\n          </div>\r\n        </div>\r\n\r\n        <style jsx>{`\r\n          nav {\r\n            background: none;\r\n          }\r\n          nav a {\r\n            display: inline-block;\r\n            padding: 15px;\r\n            color: white;\r\n            cursor: pointer;\r\n            text-decoration: none;\r\n          }\r\n          .clip {\r\n            display: flex;\r\n            height: 100%;\r\n            flex-direction: column;\r\n            background: #8756ca;\r\n            color: white;\r\n          }\r\n          picture {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex: 1 1;\r\n            flex-direction: column;\r\n            width: auto;\r\n            padding: 10%;\r\n          }\r\n          picture div {\r\n            width: 100%;\r\n            height: 100%;\r\n            background-position: 50% 50%;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n          }\r\n          .player {\r\n            padding: 30px;\r\n            background: rgba(0, 0, 0, 0.3);\r\n            text-align: center;\r\n          }\r\n          h3 {\r\n            margin: 0;\r\n          }\r\n          h6 {\r\n            margin: 0;\r\n            margin-top: 1em;\r\n          }\r\n          audio {\r\n            margin-top: 2em;\r\n            width: 100%;\r\n          }\r\n\r\n          .modal {\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            z-index: 99999;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// components/PodcastPlayer.js","import \"isomorphic-fetch\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\nimport PodcastListWithClick from \"../components/PodcastListWithClick\";\nimport PodcastPlayer from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { openPodcast: null };\n  }\n\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n      ]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status,\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n\n      return { channel, audioClips, series, statusCode: 200 };\n    } catch (e) {\n      return { channel: null, audioClips: null, series: null, statusCode: 503 };\n    }\n  }\n\n  openPodcast = (event, podcast) => {\n    if (\n      event.metaKey ||\n      event.ctrlKey ||\n      event.shiftKey ||\n      (event.nativeEvent && event.nativeEvent.which === 2)\n    ) {\n      // Si estÃ¡ haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n      return;\n    }\n\n    event.preventDefault();\n    this.setState({\n      openPodcast: podcast,\n    });\n  };\n\n  closePodcast = (event) => {\n    event.preventDefault();\n    this.setState({\n      openPodcast: null,\n    });\n  };\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props;\n    const { openPodcast } = this.state;\n\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n\n    return (\n      <Layout title={channel.title}>\n        {openPodcast && (\n          <PodcastPlayer clip={openPodcast} onClose={this.closePodcast} />\n        )}\n\n        <div\n          className=\"banner\"\n          style={{\n            backgroundImage: `url(${channel.urls.banner_image.original})`,\n          }}\n        />\n\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && (\n          <div>\n            <h2>Series</h2>\n            <ChannelGrid channels={series} />\n          </div>\n        )}\n\n        <h2>Ultimos Podcasts</h2>\n        <PodcastListWithClick\n          podcasts={audioClips}\n          onClickPodcast={this.openPodcast}\n        />\n\n        <style jsx>{`\n          .banner {\n            width: 100%;\n            padding-bottom: 25%;\n            background-position: 50% 50%;\n            background-size: cover;\n            background-color: #aaa;\n          }\n          h1 {\n            font-weight: 600;\n            padding: 15px;\n          }\n          h2 {\n            padding: 15px;\n            font-size: 1.2em;\n            font-weight: 600;\n            margin: 0;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/channel.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAAA;AAAA;AAgGA;;;;AArGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAyCA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA;AACA;AAAA;AACA;AADA;AAGA;AA9DA;AAEA;AAAA;AAAA;AAFA;AAGA;AACA;;;AA4DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAgDA;;;;;;;;;;;;;AApHA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;AAOA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAtCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}